
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	
	# 最大请求体大小
	client_max_body_size 512M; 
	
	# github域前置
	upstream github-com-lb {
		server 20.205.243.166:443;
		server 20.27.177.113:443;
		server 140.82.112.4:443;
	}
	server {
		listen 443 ssl;
		server_name github.com;
		# 证书与密钥
		ssl_certificate ca/pixiv.net.crt;
		ssl_certificate_key ca/pixiv.net.key;
		# 代理根路径
		location / {
			#proxy_pass https://20.205.243.166;
			proxy_pass https://github-com-lb/;
			proxy_set_header Host $host;
			# 调整缓冲区大小 upstream sent too big header 502
			proxy_buffer_size	1024k; #nginx保存用户请求头缓冲区大小
			proxy_buffers		100	1024k; #4个缓冲区，网页平均在32k以下
		}
	}
	# wiki
	upstream upload-wikimedia-org {
		server 185.15.59.240:443;
		#server 208.80.153.240:443;
		#server 208.80.154.240:443;
	}
	server {
		listen 443 ssl;
		server_name upload.wikimedia.org;
		ssl_certificate ca/pixiv.net.crt;
		ssl_certificate_key ca/pixiv.net.key;
		location / {
			proxy_pass https://upload-wikimedia-org/;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Real_IP $remote_addr;
			proxy_set_header User-Agent $http_user_agent;
			proxy_set_header Accept-Encoding '';
			proxy_buffering off;
		}
	}
	upstream wikipedia-org {
		server 185.15.59.224:443;
		#server 208.80.153.224:443;
		#server 208.80.154.224:443;
		#server 103.102.166.224:443;
	}
	server {
		listen 443 ssl;
		server_name *.wikipedia.org;
		ssl_certificate ca/pixiv.net.crt;
		ssl_certificate_key ca/pixiv.net.key;
		location / {
			proxy_pass https://wikipedia-org/;
			#proxy_pass https://185.15.59.224/;
			proxy_set_header Host $host;
			proxy_buffer_size	128k; #nginx保存用户请求头缓冲区大小
			proxy_buffers		4	128k; #4个缓冲区，网页平均在32k以下
		}
	}
	
	
	
	# pixiv广告
	server {
		listen 443 ssl;
		server_name a.pixiv.org;
		# 返回关闭连接状态码
		return 444;
		return 403;
	}
	upstream i-pximg-net {
		server 210.140.92.141:443;
		server 210.140.92.142:443;
		server 210.140.92.144:443;
		server 210.140.92.145:443;
		#server 210.140.92.143:443;
	}
	server {
		listen 443 ssl;
		server_name i.pximg.net;
		ssl_certificate ca/pixiv.net.crt;
		ssl_certificate_key ca/pixiv.net.key;
		location / {
			proxy_pass https://i-pximg-net/;
			proxy_set_header Host $host;
		}
	}
	upstream accounts-pixiv-net {
		server 210.140.131.226:443;
		server 210.140.131.222:443;
		#server 210.140.131.218:443;
	}
	server {
		listen 443 ssl;
		server_name accounts.pixiv.net;
		ssl_certificate ca/pixiv.net.crt;
		ssl_certificate_key ca/pixiv.net.key;
		location / {
			proxy_pass https://accounts-pixiv-net/;
			proxy_set_header Host $host;
		}
	}
	
	
	upstream www-pixiv-net {
		server 210.140.131.199:443;
		server 210.140.131.223:443;
		server 210.140.131.220:443;
		#server 104.18.12.135:443;
		#server 104.18.13.135:443;
	}
	server {
		listen 443 ssl;
		server_name www.pixiv.net;


		ssl_certificate ca/pixiv.net.crt;
		ssl_certificate_key ca/pixiv.net.key;

		client_max_body_size 50M;

		location / {
			#proxy_ssl_server_name on;
			proxy_pass https://www-pixiv-net;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Real_IP $remote_addr;
			proxy_set_header User-Agent $http_user_agent;
			proxy_set_header Accept-Encoding '';
			proxy_buffering off;
		}
	}
	
	
			
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
